/**
虽然当前的trait系统很强大，但依然有很多需要改进的地方，主要包括以下三点：
· 孤儿规则的局限性。
· 代码复用的效率不高。(重叠规则，该规则规定了不能为重叠的类型实现同一个trait)
· 抽象表达能力有待改进。

迭代器在Rust中应用广泛，但是它目前有一个缺陷：在迭代元素的时候，只能按值进行迭代，有的时候必须重新分配数据,
而不能通过引用来复用原始的数据。
trait StreamingIterator {
    type Item<'a>;

    fn next<'a>(&'a mut self) -> Option<self::Item<'a>>;
}

 */